services: #different containers that are going to run when we start our containers(Compose up!)
  postgres: #the first service we define, postgres
    container_name: postgres #name the container
    image: postgres:latest #retrieves latest postgres base image
    ports: #ports are a doorways into a server/application 
      - "5432:5432" #service runs on the port 5432 (we can get in throught the door 5432, its open)
    environment: #defining required enviorment variables, which are used to configure different settings in our data base
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB} #the name of the initial database
    volumes: #We can interact with the virtual file system of our container through the volume section
      - ./list_plantf.csv:/tmp/list_plantf.csv #mounting the csv file into the tmp volume
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql #copying our local init.sql file into the container, now that their is a file in initdb.d postgres will execute it on startup
      - pgdata:/var/lib/postgresql/data #creating a section of containers file system that the database can use to store data
    restart: always # for more on restart policies see https://docs.docker.com/config/containers/start-containers-automatically/

  pgadmin: #the second service we define, pgadmin. A UI to interact with the postgres database service thats running in the container.
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    depends_on: #defining an order for the startup of our containers ie. run postgres first. 
      - postgres
    ports:
      - "5050:80" #the left port is the external entrypoint(host port)(the port on my laptop) and the right port is the internal entry point(container port), there is a mapping from host port to container port
    environment: #defining the username and password for pgadmin
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
    restart: always
  
volumes: #specifying the volumes that you are using for all services
  pgdata: